<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
         updateCheck="false">

    <!--ehcache其实是支持：内存 + 磁盘 + 堆外内存，这么几个层级的-->
    <diskStore path="java.io.tmpdir/Tmp_EhCache" />

    <!--默认的缓存策略-->
    <!--如果没有找到用户指定的缓存策略，就用defaultCache-->
    <defaultCache
            eternal="false"
            maxElementsInMemory="1000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="0"
            timeToLiveSeconds="0"
            memoryStoreEvictionPolicy="LRU" />

    <cache
            name="local"
            eternal="false"
            maxElementsInMemory="1000"
            overflowToDisk="false"
            diskPersistent="false"
            timeToIdleSeconds="0"
            timeToLiveSeconds="0"
            memoryStoreEvictionPolicy="LRU" />

    <!--eternal: 如果设置为true，那么timeout就没效果，缓存会一直存在，一般是false-->
    <!--maxElementsInMemory：内存中可以缓存多少个数据缓存。实际中需要自己计算：根据可以用作缓存的内存打下x兆，除以每个缓存对象的大小-->
    <!--overflowToDisk：如果内存不够，是否溢出到磁盘-->
    <!--diskPersistent：是否启用磁盘持久化机制，一般不用-->
    <!--timeToIdleSeconds:对象最大的闲置时间,超过闲置时间就过期-->
    <!--timeToLiveSeconds:对象最多存活的时间,超过就过期-->
    <!--memoryStoreEvictionPolicy:当缓存数量达到指定数量的时候,指定缓存清除算法.支持LRU、LFU、FIFO缓存淘汰算法-->

</ehcache>
